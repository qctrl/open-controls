name: Release workflow

on:
  release:
    types: [published]

jobs:

  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Update version in code
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source <(curl -sL http://ci.q-ctrl.com)
        ./ci vault login -r ${{ secrets.VAULT_ROLE_ID }} -s ${{ secrets.VAULT_SECRET_ID }}
        ./ci docker run qctrl/python-build:3.7 /scripts/housekeeping.sh
    - name: Publish publicly
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source <(curl -sL http://ci.q-ctrl.com)
        ./ci docker run qctrl/python-build:3.7 /scripts/publish-release-publicly.sh
    - name: Publish internally
      run: |
        ./ci docker run qctrl/python-build:3.7 /scripts/publish-release-internally.sh

  sphinx_documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Sphinx Image
        run: |
          source <(curl -sL http://ci.q-ctrl.com)
          ./ci vault login -r ${{ secrets.VAULT_ROLE_ID }} -s ${{ secrets.VAULT_SECRET_ID }}
          ./ci vault get -t $(cat .token) -p secret/data/dockerhub -k hub_user -o .hub_user
          ./ci vault get -t $(cat .token) -p secret/data/dockerhub -k hub_pass -o .hub_pass
          ./ci docker build \
            -f ./docs/Dockerfile \
            -t qctrl/python-open-controls-docs:latest
      - name: Push Sphinx Image to Dockerhub
        run: |
          ./ci docker push \
            -u $(cat .hub_user) \
            -p $(cat .hub_pass) \
            qctrl/python-open-controls-docs:latest
      - name: Update Sphinx deployment in Kubernetes (Production)
        run: |
          ./ci vault login -r ${{ secrets.VAULT_ROLE_ID }} -s ${{ secrets.VAULT_SECRET_ID }}
          ./ci vault gcpKey -t $(cat .token) --proj q-ctrl-documentation -r docs -o ./gcloud-service-key.json
          gcloud auth activate-service-account --key-file=./gcloud-service-key.json
          gcloud config set project q-ctrl-documentation
          gcloud container clusters get-credentials docs-production --zone us-central1-c
          kubectl -n docs rollout restart deployment/python-open-controls-docs